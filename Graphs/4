import java.util.*;

public class Bipartite
{
    List<Integer>arr[];
    int v;
    boolean[] color;
    private final boolean BLACK = false;
    private final boolean RED = true;

    Bipartite(int v)
    {
        this.v = v;
        arr = new LinkedList[v];
        for(int i=0;i<v;i++)
        {
            arr[i] = new LinkedList();
        }
        color = new boolean[1];
        color[0] = false;
    }

    void add(Bipartite b,int x,int y)
    {
        b.arr[x].add(y);
        b.arr[y].add(x);
    }
    
    boolean dfs(int u,boolean[] visited)
    {
        visited[u] = true;
        color[u] = true;
        for(int i=0;i<arr[u].size();i++)
        {
            int x = arr[u].get(i);
            if(!visited[x])
            {
                color[x] = !color[u];
                dfs(x,visited);
            }
            else
            {
                if(color[x] == color[u]) {
                    return false;
                }
            }
        }
        return true;
    }
    
    void fun()
    {
        boolean[] visited = new boolean[v];
        System.out.println(dfs(0,visited));
    }
    
    public static void main(String args[])
    {
        Bipartite b = new Bipartite(4);
        b.add(b,0,1);
        b.add(b,0,3);
        b.add(b,1,2);
        b.add(b,2,3);
        b.fun();
    }
}
